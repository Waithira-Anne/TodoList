{"ast":null,"code":"import axios from\"axios\";import React from\"react\";import{useEffect,useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Todo(){const[todoList,setTodoList]=useState([]);const[editableId,setEditableId]=useState(null);const[editedTask,setEditedTask]=useState(\"\");const[editedStatus,setEditedStatus]=useState(\"\");const[newTask,setNewTask]=useState(\"\");const[newStatus,setNewStatus]=useState(\"\");const[newDeadline,setNewDeadline]=useState(\"\");const[editedDeadline,setEditedDeadline]=useState(\"\");// Fetch tasks from database\nuseEffect(()=>{axios.get('http://127.0.0.1:3001/getTodoList').then(result=>{setTodoList(result.data);}).catch(err=>console.log(err));},[]);// Function to toggle the editable state for a specific row\nconst toggleEditable=id=>{const rowData=todoList.find(data=>data._id===id);if(rowData){setEditableId(id);setEditedTask(rowData.task);setEditedStatus(rowData.status);setEditedDeadline(rowData.deadline||\"\");}else{setEditableId(null);setEditedTask(\"\");setEditedStatus(\"\");setEditedDeadline(\"\");}};// Function to add task to the database\nconst addTask=e=>{e.preventDefault();if(!newTask||!newStatus||!newDeadline){alert(\"All fields must be filled out.\");return;}axios.post('http://127.0.0.1:3001/addTodoList',{task:newTask,status:newStatus,deadline:newDeadline}).then(res=>{console.log(res);window.location.reload();}).catch(err=>console.log(err));};// Function to save edited data to the database\nconst saveEditedTask=id=>{const editedData={task:editedTask,status:editedStatus,deadline:editedDeadline};// If the fields are empty\nif(!editedTask||!editedStatus||!editedDeadline){alert(\"All fields must be filled out.\");return;}// Updating edited data to the database through updateById API\naxios.post('http://127.0.0.1:3001/updateTodoList/'+id,editedData).then(result=>{console.log(result);setEditableId(null);setEditedTask(\"\");setEditedStatus(\"\");setEditedDeadline(\"\");window.location.reload();}).catch(err=>console.log(err));};// Delete task from database\nconst deleteTask=id=>{axios.delete('http://127.0.0.1:3001/deleteTodoList/'+id).then(result=>{console.log(result);window.location.reload();}).catch(err=>console.log(err));};return/*#__PURE__*/_jsx(\"div\",{className:\"container mt-5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-7\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center\",children:\"Todo List\"}),/*#__PURE__*/_jsx(\"div\",{className:\"table-responsive\",children:/*#__PURE__*/_jsxs(\"table\",{className:\"table table-bordered\",children:[/*#__PURE__*/_jsx(\"thead\",{className:\"table-primary\",children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Task\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Deadline\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),Array.isArray(todoList)?/*#__PURE__*/_jsx(\"tbody\",{children:todoList.map(data=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:editableId===data._id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:editedTask,onChange:e=>setEditedTask(e.target.value)}):data.task}),/*#__PURE__*/_jsx(\"td\",{children:editableId===data._id?/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"form-control\",value:editedStatus,onChange:e=>setEditedStatus(e.target.value)}):data.status}),/*#__PURE__*/_jsx(\"td\",{children:editableId===data._id?/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",className:\"form-control\",value:editedDeadline,onChange:e=>setEditedDeadline(e.target.value)}):data.deadline?new Date(data.deadline).toLocaleString():''}),/*#__PURE__*/_jsxs(\"td\",{children:[editableId===data._id?/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-success btn-sm\",onClick:()=>saveEditedTask(data._id),children:\"Save\"}):/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-primary btn-sm\",onClick:()=>toggleEditable(data._id),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-danger btn-sm ml-1\",onClick:()=>deleteTask(data._id),children:\"Delete\"})]})]},data._id))}):/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"4\",children:\"Loading products...\"})})})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"col-md-5\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-center\",children:\"Add Task\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"bg-light p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Task\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",placeholder:\"Enter Task\",onChange:e=>setNewTask(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",placeholder:\"Enter Status\",onChange:e=>setNewStatus(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Deadline\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"datetime-local\",onChange:e=>setNewDeadline(e.target.value)})]}),/*#__PURE__*/_jsx(\"button\",{onClick:addTask,className:\"btn btn-success btn-sm\",children:\"Add Task\"})]})]})]})});}export default Todo;","map":{"version":3,"names":["axios","React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","Todo","todoList","setTodoList","editableId","setEditableId","editedTask","setEditedTask","editedStatus","setEditedStatus","newTask","setNewTask","newStatus","setNewStatus","newDeadline","setNewDeadline","editedDeadline","setEditedDeadline","get","then","result","data","catch","err","console","log","toggleEditable","id","rowData","find","_id","task","status","deadline","addTask","e","preventDefault","alert","post","res","window","location","reload","saveEditedTask","editedData","deleteTask","delete","className","children","Array","isArray","map","type","value","onChange","target","Date","toLocaleString","onClick","colSpan","placeholder"],"sources":["/home/dci-student/Downloads/Anne-Todo/Todo-List/frontend/src/components/Todo.js"],"sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nfunction Todo() {\n    const [todoList, setTodoList] = useState([]);\n    const [editableId, setEditableId] = useState(null);\n    const [editedTask, setEditedTask] = useState(\"\");\n    const [editedStatus, setEditedStatus] = useState(\"\");\n    const [newTask, setNewTask] = useState(\"\");\n    const [newStatus, setNewStatus] = useState(\"\");\n    const [newDeadline, setNewDeadline] = useState(\"\");\n    const [editedDeadline, setEditedDeadline] = useState(\"\");\n\n    // Fetch tasks from database\n    useEffect(() => {\n        axios.get('http://127.0.0.1:3001/getTodoList')\n            .then(result => {\n                setTodoList(result.data)\n            })\n            .catch(err => console.log(err))\n    }, [])\n\n    // Function to toggle the editable state for a specific row\n    const toggleEditable = (id) => {\n        const rowData = todoList.find((data) => data._id === id);\n        if (rowData) {\n            setEditableId(id);\n            setEditedTask(rowData.task);\n            setEditedStatus(rowData.status);\n            setEditedDeadline(rowData.deadline || \"\");\n        } else {\n            setEditableId(null);\n            setEditedTask(\"\");\n            setEditedStatus(\"\");\n            setEditedDeadline(\"\");\n        }\n    };\n\n\n    // Function to add task to the database\n    const addTask = (e) => {\n        e.preventDefault();\n        if (!newTask || !newStatus || !newDeadline) {\n            alert(\"All fields must be filled out.\");\n            return;\n        }\n\n        axios.post('http://127.0.0.1:3001/addTodoList', { task: newTask, status: newStatus, deadline: newDeadline })\n            .then(res => {\n                console.log(res);\n                window.location.reload();\n            })\n            .catch(err => console.log(err));\n    }\n\n    // Function to save edited data to the database\n    const saveEditedTask = (id) => {\n        const editedData = {\n            task: editedTask,\n            status: editedStatus,\n            deadline: editedDeadline,\n        };\n\n        // If the fields are empty\n        if (!editedTask || !editedStatus || !editedDeadline) {\n            alert(\"All fields must be filled out.\");\n            return;\n        }\n\n        // Updating edited data to the database through updateById API\n        axios.post('http://127.0.0.1:3001/updateTodoList/' + id, editedData)\n            .then(result => {\n                console.log(result);\n                setEditableId(null);\n                setEditedTask(\"\");\n                setEditedStatus(\"\");\n                setEditedDeadline(\"\"); \n                window.location.reload();\n            })\n            .catch(err => console.log(err));\n    }\n\n\n    // Delete task from database\n    const deleteTask = (id) => {\n        axios.delete('http://127.0.0.1:3001/deleteTodoList/' + id)\n            .then(result => {\n                console.log(result);\n                window.location.reload();\n            })\n            .catch(err =>\n                console.log(err)\n            )\n    }\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-7\">\n                    <h2 className=\"text-center\">Todo List</h2>\n                    <div className=\"table-responsive\">\n                        <table className=\"table table-bordered\">\n                            <thead className=\"table-primary\">\n                                <tr>\n                                    <th>Task</th>\n                                    <th>Status</th>\n                                    <th>Deadline</th>\n                                    <th>Actions</th>\n                                </tr>\n                            </thead>\n                            {Array.isArray(todoList) ? (\n                                <tbody>\n                                    {todoList.map((data) => (\n                                        <tr key={data._id}>\n                                            <td>\n                                                {editableId === data._id ? (\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control\"\n                                                        value={editedTask}\n                                                        onChange={(e) => setEditedTask(e.target.value)}\n                                                    />\n                                                ) : (\n                                                    data.task\n                                                )}\n                                            </td>\n                                            <td>\n                                                {editableId === data._id ? (\n                                                    <input\n                                                        type=\"text\"\n                                                        className=\"form-control\"\n                                                        value={editedStatus}\n                                                        onChange={(e) => setEditedStatus(e.target.value)}\n                                                    />\n                                                ) : (\n                                                    data.status\n                                                )}\n                                            </td>\n                                            <td>\n                                                {editableId === data._id ? (\n                                                    <input\n                                                        type=\"datetime-local\"\n                                                        className=\"form-control\"\n                                                        value={editedDeadline}\n                                                        onChange={(e) => setEditedDeadline(e.target.value)}\n                                                    />\n                                                ) : (\n                                                    data.deadline ? new Date(data.deadline).toLocaleString() : ''\n                                                )}\n                                            </td>\n\n                                            <td>\n                                                {editableId === data._id ? (\n                                                    <button className=\"btn btn-success btn-sm\" onClick={() => saveEditedTask(data._id)}>\n                                                        Save\n                                                    </button>\n                                                ) : (\n                                                    <button className=\"btn btn-primary btn-sm\" onClick={() => toggleEditable(data._id)}>\n                                                        Edit\n                                                    </button>\n                                                )}\n                                                <button className=\"btn btn-danger btn-sm ml-1\" onClick={() => deleteTask(data._id)}>\n                                                    Delete\n                                                </button>\n                                            </td>\n                                        </tr>\n                                    ))}\n                                </tbody>\n                            ) : (\n                                <tbody>\n                                    <tr>\n                                        <td colSpan=\"4\">Loading products...</td>\n                                    </tr>\n                                </tbody>\n                            )}\n\n\n                        </table>\n                    </div>\n                </div>\n                <div className=\"col-md-5\">\n                    <h2 className=\"text-center\">Add Task</h2>\n                    <form className=\"bg-light p-4\">\n                        <div className=\"mb-3\">\n                            <label>Task</label>\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"Enter Task\"\n                                onChange={(e) => setNewTask(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label>Status</label>\n                            <input\n                                className=\"form-control\"\n                                type=\"text\"\n                                placeholder=\"Enter Status\"\n                                onChange={(e) => setNewStatus(e.target.value)}\n                            />\n                        </div>\n                        <div className=\"mb-3\">\n                            <label>Deadline</label>\n                            <input\n                                className=\"form-control\"\n                                type=\"datetime-local\"\n                                onChange={(e) => setNewDeadline(e.target.value)}\n                            />\n                        </div>\n                        <button onClick={addTask} className=\"btn btn-success btn-sm\">\n                            Add Task\n                        </button>\n                    </form>\n                </div>\n\n            </div>\n        </div>\n    )\n}\nexport default Todo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}